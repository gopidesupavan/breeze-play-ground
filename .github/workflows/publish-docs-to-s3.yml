# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
name: Publish Docs to S3
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      ref:
        description: "The branch or tag to checkout for the build"
        required: true
        default: "providers-amazon/9.5.0rc1"
        type: string
#      exclude-docs:
#        description: "Comma separated list of docs to exclude"
#        required: false
#        default: ""
#        type: string
#      destination-location:
#        description: "The destination location in S3"
#        required: false
#        default: "s3://airflow-docs"
#        type: string
#      dry-run:
#        description: "Whether to publish docs to S3 or not"
#        required: false
#        default: "false"
#        type: string
#      overwrite:
#        description: "Whether to overwrite existing docs in S3"
#        required: false
#        default: "false"
#        type: string

permissions:
  contents: read
jobs:
  build-ci-images:
    name: Build CI images
    uses: ./.github/workflows/ci-image-build.yml
    permissions:
      contents: read
      # This write is only given here for `push` events from "apache/airflow" repo. It is not given for PRs
      # from forks. This is to prevent malicious PRs from creating images in the "apache/airflow" repo.
      packages: write
    with:
      runs-on-as-json-public: '["ubuntu-22.04"]'
      runs-on-as-json-self-hosted: '["ubuntu-22.04"]'
      platform: "linux/amd64"
      push-image: "false"
      upload-image-artifact: "true"
      upload-mount-cache-artifact: false
      python-versions: "['3.9']"
      branch: ${{ inputs.ref }}
      use-uv: true
      upgrade-to-newer-dependencies: false
      constraints-branch: "constraints-main"
      docker-cache: registry
      disable-airflow-repo-cache: false

  build-docs:
    timeout-minutes: 150
    name: "Build documentation"
    runs-on: ubuntu-latest
    if: inputs.docs-build == 'true'
    strategy:
      fail-fast: false
      matrix:
        flag: [ "--docs-only"]
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: ${{ github.actor }}
      INCLUDE_NOT_READY_PROVIDERS: "true"
      INCLUDE_SUCCESS_OUTPUTS: false
      PYTHON_MAJOR_MINOR_VERSION: ${{ inputs.default-python-version }}
      VERBOSE: "true"
    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout ${{ inputs.ref }} "
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}
      - name: "Prepare breeze & CI image: 3.9"
        uses: ./.github/actions/prepare_breeze_and_image
        with:
          platform: "linux/amd64"
          python: 3.9
          use-uv: true
      - name: "Restore docs inventory cache"
        uses: apache/infrastructure-actions/stash/restore@1c35b5ccf8fba5d4c3fdf25a045ca91aa0cbc468
        with:
          path: ./docs/_inventory_cache/
          # TODO(potiuk): do better with determining the key
          key: cache-docs-inventory-v1-${{ hashFiles('pyproject.toml') }}
        id: restore-docs-inventory-cache
      - name: "Building docs with ${{ matrix.flag }} flag"
        env:
          DOCS_LIST_AS_STRING: ""
        run: >
          breeze build-docs ${DOCS_LIST_AS_STRING} ${{ matrix.flag }}
      - name: "Save docs inventory cache"
        uses: apache/infrastructure-actions/stash/save@1c35b5ccf8fba5d4c3fdf25a045ca91aa0cbc468
        with:
          path: ./docs/_inventory_cache/
          key: cache-docs-inventory-v1-${{ hashFiles('pyproject.toml') }}
          if-no-files-found: 'error'
          retention-days: '2'
        # If we upload from multiple matrix jobs we could end up with a race condition. so just pick one job
        # to be responsible for updating it. https://github.com/actions/upload-artifact/issues/506
        if: steps.restore-docs-inventory-cache != 'true' && matrix.flag == '--docs-only'
      - name: "Upload build docs"
        uses: actions/upload-artifact@v4
        with:
          name: airflow-docs
          path: './docs/_build'
          retention-days: '7'
          if-no-files-found: 'error'
        if: matrix.flag == '--docs-only'

  publish-docs-to-s3:
    name: "Publish documentation to S3"
    permissions:
      id-token: write
      contents: read
    needs: build-docs
    runs-on: ubuntu-latest
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: ${{ github.actor }}
      INCLUDE_NOT_READY_PROVIDERS: "true"
      INCLUDE_SUCCESS_OUTPUTS: false
      PYTHON_MAJOR_MINOR_VERSION: 3.9
      VERBOSE: "true"
    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"
      - name: "Checkout ${{ inputs.ref }} "
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}
      - name: "Cleanup docker"
        run: ./scripts/ci/cleanup_docker.sh
      - name: "Download docs prepared as artifacts"
        uses: actions/download-artifact@v4
        with:
          name: airflow-docs
          path: './docs/_build'
      - name: Check disk space available
        run: df -h
      - name: Create /mnt/airflow-site directory
        run: |
          sudo mkdir -p /mnt/airflow-site && sudo chown -R "${USER}" /mnt/airflow-site
           echo "AIRFLOW_SITE_DIRECTORY=/mnt/airflow-site/" >> "$GITHUB_ENV"
      - name: "Prepare breeze & CI image: 3.9"
        uses: ./.github/actions/prepare_breeze_and_image
        with:
          platform: "linux/amd64"
          python: 3.9
          use-uv: true
      - name: "Publish docs"
        env:
          DOCS_LIST_AS_STRING: ""
        run: >
          breeze release-management publish-docs --override-versioned --run-in-parallel
          ${DOCS_LIST_AS_STRING}
      - name: Check disk space available
        run: df -h
      - name: "Generate back references for providers"
        run: breeze release-management add-back-references all-providers
      - name: "Generate back references for apache-airflow"
        run: breeze release-management add-back-references apache-airflow
      - name: "Generate back references for docker-stack"
        run: breeze release-management add-back-references docker-stack
      - name: "Generate back references for helm-chart"
        run: breeze release-management add-back-references helm-chart
      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/
          ls -lthr /mnt/airflow-site/
          ls -lthr /mnt/airflow-site/docs-archive/
          


